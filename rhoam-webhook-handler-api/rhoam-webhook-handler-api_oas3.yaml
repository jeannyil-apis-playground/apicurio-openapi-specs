---
openapi: 3.0.2
info:
  title: RHOAM Webhook Events Handler API
  version: 1.0.0
  description: API that handles RHOAM Admin/Developer Portals webhook events
  contact:
    name: Jean Nyilimbibi
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
- url: http://rhoam-webhook-events-handler-api.apps.jeannyil.sandbox438.opentlc.com
  description: API Backend URL
paths:
  /webhook/amqpbridge:
    summary: Bridges RHOAM Admin/Developer Portals webhook events to an AMQP broker
    description: Callback endpoint that receives RHOAM Admin/Developer Portals webhook
      events and sends them to an AMQP queue
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
              examples:
                responseMessageOK:
                  value:
                    status: OK
          description: Pong
      operationId: pingWebhook
      summary: Handles RHOAM webhook ping
      description: Handles RHOAM webhook ping
    post:
      requestBody:
        description: RHOAM Admin/Developer Portal webhook event in XML format
        content:
          text/xml:
            schema:
              type: string
            examples:
              accountCreatedXmlEvent:
                value: |-
                  <?xml version="1.0" encoding="UTF-8"?>
                  <event>
                    <action>created</action>
                    <type>account</type>
                    <object>
                      <account>
                        <id>6</id>
                        <created_at>2021-05-14T20:22:53Z</created_at>
                        <updated_at>2021-05-14T20:22:53Z</updated_at>
                        <state>created</state>
                        <org_name>TestAccount</org_name>
                        <extra_fields/>
                        <monthly_billing_enabled>true</monthly_billing_enabled>
                        <monthly_charging_enabled>true</monthly_charging_enabled>
                        <credit_card_stored>false</credit_card_stored>
                        <plans>
                          <plan default="true">
                            <id>6</id>
                            <name>Default</name>
                            <type>account_plan</type>
                            <state>hidden</state>
                            <approval_required>false</approval_required>
                            <setup_fee>0.0</setup_fee>
                            <cost_per_month>0.0</cost_per_month>
                            <trial_period_days/>
                            <cancellation_period>0</cancellation_period>
                          </plan>
                        </plans>
                        <users>
                          <user>
                            <id>9</id>
                            <created_at>2021-05-14T20:22:53Z</created_at>
                            <updated_at>2021-05-14T20:22:53Z</updated_at>
                            <account_id>6</account_id>
                            <state>pending</state>
                            <role>admin</role>
                            <username>admin</username>
                            <email>admin@acme.org</email>
                            <extra_fields/>
                          </user>
                        </users>
                      </account>
                    </object>
                  </event>
              accountDeletedXmlEvent:
                value: |-
                  <?xml version="1.0" encoding="UTF-8"?>
                  <event>
                    <action>updated</action>
                    <type>account</type>
                    <object>
                      <account>
                        <id>6</id>
                        <created_at>2021-05-14T20:22:53Z</created_at>
                        <updated_at>2021-05-14T20:22:53Z</updated_at>
                        <state>approved</state>
                        <org_name>TestAccount</org_name>
                        <extra_fields/>
                        <monthly_billing_enabled>true</monthly_billing_enabled>
                        <monthly_charging_enabled>true</monthly_charging_enabled>
                        <credit_card_stored>false</credit_card_stored>
                        <plans>
                          <plan default="true">
                            <id>6</id>
                            <name>Default</name>
                            <type>account_plan</type>
                            <state>hidden</state>
                            <approval_required>false</approval_required>
                            <setup_fee>0.0</setup_fee>
                            <cost_per_month>0.0</cost_per_month>
                            <trial_period_days/>
                            <cancellation_period>0</cancellation_period>
                          </plan>
                        </plans>
                        <users>
                          <user>
                            <id>9</id>
                            <created_at>2021-05-14T20:22:53Z</created_at>
                            <updated_at>2021-05-14T20:22:53Z</updated_at>
                            <account_id>6</account_id>
                            <state>pending</state>
                            <role>admin</role>
                            <username>admin</username>
                            <email>admin@acme.org</email>
                            <extra_fields/>
                          </user>
                        </users>
                      </account>
                    </object>
                  </event>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
              examples:
                responseMessageOK:
                  value:
                    status: OK
          description: RHOAM XML event handled.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
              examples:
                responseMessageKO:
                  value:
                    status: KO
                    error:
                      code: "500"
                      description: Internal Server Error
                      message: "java.lang.Exception: Mocked error message"
          description: Internal server error
      operationId: sendToAMQPQueue
      summary: Sends RHOAM Admin/Developer Portal webhook event to an AMQP queue
      description: Sends RHOAM Admin/Developer Portal webhook event to an AMQP queue
components:
  schemas:
    ResponseMessage:
      title: Root Type for ResponseMessage
      description: Response message
      required:
      - status
      type: object
      properties:
        status:
          description: Status
          enum:
          - OK
          - KO
          type: string
        error:
          $ref: '#/components/schemas/ErrorMessageType'
          description: Status message
      example:
        status: KO
        error:
          code: "500"
          description: Internal server error
          message: "java.lang.Exception: mocked error"
    ErrorMessageType:
      title: Root Type for StatusMessageType
      description: 'Error message type  '
      required:
      - code
      - description
      - message
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        message:
          type: string
      example:
        code: "500"
        description: Internal server error
        message: "java.lang.Exception: mocked error"
